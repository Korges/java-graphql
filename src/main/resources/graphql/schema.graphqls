interface Human {
    firstName: String
    lastName: String
}

type Lecutre {
    id: ID!
    description: String
    subject: Subject
}

type Student implements Human {
    id: ID!
    firstName: String
    lastName: String
    subjectList: [Subject]
}

type Subject {
    id: ID!
    title: String
    lectureList: [Lecutre]
    teacher: Teacher
}

type Teacher implements Human {
    id: ID!
    firstName: String
    lastName: String
    subjectList: [Subject]
}

type Mutation {
    addStudent(student: HumanInput) : Student
    addTeacher(teacher: HumanInput) : Teacher
    addSubject(subject: SubjectInput) : Subject
}

union SubjectAndLecture = Subject | Lecutre

type Query {
    allLectures: [Lecutre]
    allStudents: [Student]
    allSubjects: [Subject]
    allTeachers: [Teacher]
    allHumans: [Human]
    allSubjectsAndLectures: [SubjectAndLecture]
}

schema {
    query: Query
}

input LectureInput {
    description: String
    subject: SubjectInput
}

input HumanInput {
    firstName: String
    lastName: String
}

input SubjectInput {
    title: String
}